//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/Alp/BulmacaInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @BulmacaInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @BulmacaInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""BulmacaInput"",
    ""maps"": [
        {
            ""name"": ""SutunBulmaca"",
            ""id"": ""cea766d4-99cc-4d24-8490-eed1895715b4"",
            ""actions"": [
                {
                    ""name"": ""Rotasyon"",
                    ""type"": ""Value"",
                    ""id"": ""b0fb7a20-3a13-48a1-9be7-7f2ba0f50efc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2a43d4d5-51d6-4ea6-b79a-2d22ac0ad8d6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotasyon"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3548626c-a864-40b8-a3d7-6dbe37b6e772"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotasyon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""30ffe988-83eb-4ce6-8ea6-84798bd0e0ae"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotasyon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d0c90869-ca60-432e-a6be-49e749db7a06"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotasyon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""698bc328-852f-409c-a72d-2697ae398422"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotasyon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // SutunBulmaca
        m_SutunBulmaca = asset.FindActionMap("SutunBulmaca", throwIfNotFound: true);
        m_SutunBulmaca_Rotasyon = m_SutunBulmaca.FindAction("Rotasyon", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // SutunBulmaca
    private readonly InputActionMap m_SutunBulmaca;
    private List<ISutunBulmacaActions> m_SutunBulmacaActionsCallbackInterfaces = new List<ISutunBulmacaActions>();
    private readonly InputAction m_SutunBulmaca_Rotasyon;
    public struct SutunBulmacaActions
    {
        private @BulmacaInput m_Wrapper;
        public SutunBulmacaActions(@BulmacaInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotasyon => m_Wrapper.m_SutunBulmaca_Rotasyon;
        public InputActionMap Get() { return m_Wrapper.m_SutunBulmaca; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SutunBulmacaActions set) { return set.Get(); }
        public void AddCallbacks(ISutunBulmacaActions instance)
        {
            if (instance == null || m_Wrapper.m_SutunBulmacaActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SutunBulmacaActionsCallbackInterfaces.Add(instance);
            @Rotasyon.started += instance.OnRotasyon;
            @Rotasyon.performed += instance.OnRotasyon;
            @Rotasyon.canceled += instance.OnRotasyon;
        }

        private void UnregisterCallbacks(ISutunBulmacaActions instance)
        {
            @Rotasyon.started -= instance.OnRotasyon;
            @Rotasyon.performed -= instance.OnRotasyon;
            @Rotasyon.canceled -= instance.OnRotasyon;
        }

        public void RemoveCallbacks(ISutunBulmacaActions instance)
        {
            if (m_Wrapper.m_SutunBulmacaActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISutunBulmacaActions instance)
        {
            foreach (var item in m_Wrapper.m_SutunBulmacaActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SutunBulmacaActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SutunBulmacaActions @SutunBulmaca => new SutunBulmacaActions(this);
    public interface ISutunBulmacaActions
    {
        void OnRotasyon(InputAction.CallbackContext context);
    }
}
